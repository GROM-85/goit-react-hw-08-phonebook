{"version":3,"file":"static/js/358.c894b48c.chunk.js","mappings":"kRACA,EAAwB,0BAAxB,EAA2D,2BAA3D,EAA6F,yBAA7F,EAA6H,yB,mJCyBvHA,EAAY,CAChBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAENC,EAAc,eAACC,EAAD,uDAASL,EAAT,6CAAsBM,OAAUL,EAAhC,EAAgCA,KAAMM,EAAtC,EAAsCA,MAAtC,eAAC,UAChBF,GADe,cAEjBJ,EAAOM,GAFU,EAKPC,EAAa,WAExB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCC,EAAAA,EAAAA,YAAWZ,EAAaJ,GAA9D,eAAOiB,EAAP,KAAoBC,EAApB,KACQC,GAAiBC,EAAAA,EAAAA,KAAjBD,aACR,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOQ,EAAP,KAAqBC,EAArB,MAeAC,EAAAA,EAAAA,YAAU,WACJJ,GACAR,EAAS,SAAU,CAAEa,SAAS,GAEnC,GAAC,CAACb,EAASQ,IAGZ,IAAQlB,EAA0BgB,EAA1BhB,KAAMC,EAAoBe,EAApBf,MAAOC,EAAac,EAAbd,SACfsB,EAAYxB,GAAQC,GAASC,EAASuB,OAAS,GAAKZ,EAE1D,OACI,iBAAKa,UAAWC,EAAhB,WACE,SAACC,EAAA,EAAD,CAAQF,UAAWC,EAAnB,UACE,SAACE,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,sBAGF,kBAAMN,UAAWC,EAAYM,SA7BZ,SAAAC,GACnBA,EAAEC,iBACF3B,GAAS4B,EAAAA,EAAAA,KAAS,UAAKpB,KACvBkB,EAAEG,cAAcC,OACjB,EAyBG,WACE,UAACC,EAAA,EAAD,CAAWC,GAAI,CAAEC,IAAK,EAAGC,MAAO,QAAhC,WACE,SAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,WAAS,EACTC,MAAM,WACNd,QAAQ,WACRhC,KAAK,OACLM,MAAON,EACP+C,QAAS9B,KAIX,SAAC0B,EAAA,EAAD,CACEC,UAAQ,EACRE,MAAM,QACNd,QAAQ,WAERhC,KAAK,QACLgD,KAAK,QACL1C,MAAOL,EACP8C,QAAS9B,KAGX,SAAC0B,EAAA,EAAD,CACEC,UAAQ,EACRE,MAAM,WACNd,QAAQ,WACRhC,KAAK,WACLgD,KAAM5B,EAAe,OAAS,WAC9Bd,MAAOJ,EACP6C,QAAS9B,EACTgC,WAAY,CAACC,cACX,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QAnEgB,kBAAMjC,GAAgB,SAAAkC,GAAI,OAAKA,CAAL,GAA1B,EAoEhBC,KAAK,MAHP,SAKGpC,GAAe,SAACqC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,YAsB5C,SAACC,EAAA,EAAD,CACEC,SAAS,SAACC,EAAA,EAAD,CAAUC,QAASjD,EAAOkD,SArFrB,SAAA7B,GACtB,IAAQ4B,EAAY5B,EAAE7B,OAAdyD,QACRhD,EAASgD,EACV,IAmFShB,MAAM,qCAER,SAACkB,EAAA,EAAD,CACEC,UAAWzC,EACXwB,KAAK,SACLhB,QAAQ,YAHV,yBASF,SAACkC,EAAA,GAAD,CAAMxC,UAAWC,EAAjB,UACI,SAACuC,EAAA,GAAD,CAAMC,MAAI,EAAV,UACE,SAACC,EAAA,EAAD,CAAMC,KAAK,SAASrC,QAAQ,QAA5B,uDASb,EC9Jc,SAASsC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,0CAEF,SAAChE,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/SignUpForm/SignUpForm.module.scss?b627","components/SignUpForm/SignUpForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paper\":\"SignUpForm_paper__+qitV\",\"avatar\":\"SignUpForm_avatar__oCUJO\",\"form\":\"SignUpForm_form__CGOfo\",\"link\":\"SignUpForm_link__XN3BH\"};","import { useAuth } from 'hooks/useAuth';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from 'redux/AuthSlice/operations';\nimport { useEffect, useReducer, useState } from 'react';\nimport css from './SignUpForm.module.scss';\n\n// MUI\nimport {\n    Avatar,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Link,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport LockOpenOutlinedIcon from '@mui/icons-material/LockOpenOutlined';\n\n\n\nconst initState = {\n  name: '',\n  email: '',\n  password: '',\n};\nconst formReducer = (state = initState, { target: { name, value } }) => ({\n  ...state,\n  [name]: value,\n});\n\nexport const SignUpForm = () => {\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [agree, setAgree] = useState(false);\n  const [inputValues, setInputValues] = useReducer(formReducer, initState);\n  const { isRegistered } = useAuth();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ ...inputValues }));\n    e.currentTarget.reset();\n  };\n\n  const handleAgreement = e => {\n    const { checked } = e.target;\n    setAgree(checked);\n  };\n\n  useEffect(() => {\n    if (isRegistered) {\n        navigate('/login', { replace: true });\n      }\n  },[navigate,isRegistered])\n  \n\n  const { name, email, password } = inputValues;\n  const canSubmit = name && email && password.length > 5 && agree;\n\n  return (\n      <div className={css.paper}>\n        <Avatar className={css.avatar}>\n          <LockOpenOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n      <form className={css.form}   onSubmit={handleSubmit}>\n        <FormGroup sx={{ gap: 2, width: '100%' }}>\n          <TextField\n            required\n            fullWidth\n            label=\"Username\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={name}\n            onInput={setInputValues}\n            // placeholder=\"Enter your Name\"\n          />\n\n          <TextField\n            required\n            label=\"Email\"\n            variant=\"outlined\"\n            // inputRef={emailInputRef}\n            name=\"email\"\n            type='email'\n            value={email}\n            onInput={setInputValues}\n            // placeholder=\"Enter your email\"\n          />\n          <TextField\n            required\n            label=\"Password\"\n            variant=\"outlined\"\n            name=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onInput={setInputValues}\n            InputProps={{endAdornment:\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }}\n          />\n          {/* <OutlinedInput\n            label=\"Password\"\n            id=\"outlined-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          /> */}\n\n          <FormControlLabel\n            control={<Checkbox checked={agree} onChange={handleAgreement} />}\n            label=\"I agree with Terms & Conditions\"\n          />\n          <Button\n            disabled={!canSubmit}\n            type=\"submit\"\n            variant=\"contained\"\n            // startIcon={isLoading && <CircularProgress size={16} />}\n          >\n            Sign Up\n          </Button>\n        </FormGroup>\n        <Grid className={css.link}>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n      </form>\n      </div>\n   \n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { SignUpForm } from 'components/SignUpForm/SignUpForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <SignUpForm />\n    </div>\n  );\n}"],"names":["initState","name","email","password","formReducer","state","target","value","SignUpForm","dispatch","useDispatch","navigate","useNavigate","useState","agree","setAgree","useReducer","inputValues","setInputValues","isRegistered","useAuth","showPassword","setShowPassword","useEffect","replace","canSubmit","length","className","css","Avatar","LockOpenOutlined","Typography","component","variant","onSubmit","e","preventDefault","register","currentTarget","reset","FormGroup","sx","gap","width","TextField","required","fullWidth","label","onInput","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","FormControlLabel","control","Checkbox","checked","onChange","Button","disabled","Grid","item","Link","href","Register","Helmet"],"sourceRoot":""}