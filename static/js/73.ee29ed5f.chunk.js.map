{"version":3,"file":"static/js/73.ee29ed5f.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (time > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && time <= 0));\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            time = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(time);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.6.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.6.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.6.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","cancelTime","calculateDuration","resolvedDuration","Infinity","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","currentTime","playbackRate","setWithVelocity","createInstantAnimation","delayBy","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}